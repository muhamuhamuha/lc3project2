0011 0001 0000 0000     ; start @ x3100

1110 111 1 0000 0000    ; LEA R7 w/ x3001
0001 111 111 1 11111    ; R7 += -1

0110 000 111 000 000    ; LDR R0 w/ R7 := x3000
0110 001 111 000 001    ; LDR R1 w/ R7 := x3001
0110 010 111 000 010    ; LDR R2 w/ R7 := x3002
0110 011 111 000 011    ; LDR R3 w/ R7 := x3003
0110 100 111 000 100    ; LDR R4 w/ R7 := x3004

0101 000 000 1 01111    ; AND R0 w/ x000F
0101 001 001 1 01111    ; AND R1 w/ x000F
0101 010 010 1 01111    ; AND R2 w/ x000F
0101 011 011 1 01111    ; AND R3 w/ x000F
0101 100 100 1 01111    ; AND R4 w/ x000F

0001 101 000 000 001    ; R5 = R1 + R2
0001 101 101 000 010    ; R5 += R2
0001 101 101 000 011    ; R5 += R3
0001 101 101 000 100    ; R5 += R4

; store 20ff into some register
; then ST that 20ff into some memory address
; then STI R5 into that memory address := 20ff

; Store x0100 into R0 as a counter
0101 000 000 1 00000    ; AND R0 w/ 0 to clear it
0001 000 000 1 01111    ; R0 = 15 -- COUNTER

0101 001 001 1 00000    ; AND R1 w/ 0 to clear it
0001 001 001 1 01111    ; R1 = 15
0001 001 001 1 00010    ; R1 = 17

0101 010 010 1 00000    ; AND R2 w/ 0 to clear it
0001 010 010 000 001    ; R2 += 17
0001 000 000 1 11111    ; R0 -= 1
0000 001 1 1111 1101    ; go back two instructions if CC P

; @ x3119
0001 010 010 1 00001    ; R2 = 100 ( R2 += 1 )
1001 010 010 111 111    ; NOT R2
0001 010 010 1 00001    ; R2 = -x0100

0101 001 001 1 00000    ; AND R1 w/ 0 to clear it
0001 000 000 1 01111    ; R0 = 15 -- COUNTER
0001 001 111 000 001    ; R1 = R7 := x3000
0001 001 001 000 010    ; R1 -= R2 := x0100
0001 000 000 1 11111    ; R0 -= 1
0000 001 1 1111 1101    ; go back two instructions if CC P
0001 001 001 1 11111    ; R1 = x20ff ( R1 -= 1 )

; @ x3123
0011 001 1 1101 1011    ; ST R1 := x20ff into x30FF
1011 101 1 1101 1010    ; STI R5 into x30FF := x20FF
